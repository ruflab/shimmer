name: Tests

on: [ push ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11.4"
      - name: Load cached Poetry install
        uses: actions/cache@v3
        id: cached-poetry
        with: 
          path: ~/.local
          key: poetry-0
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry source add torch-cpu --priority=explicit https://download.pytorch.org/whl/cpu
          torch_version=$(poetry show torch --no-ansi | sed -n 2p | sed 's/^\(\s*\)version\(\s*\):\(\s*\)\([0-9\.\+a-zA-Z]*\)\(.*\)$/\4/')
          poetry add --source torch-cpu "torch@$torch_version"
          poetry install --with test,dev,docs
      - name: Ruff Formatting
        run: poetry run ruff format --check
      - name: Ruff Linter
        run: poetry run ruff check
      - name: Analysing the code with mypy
        run: |
          poetry run mypy --install-types --non-interactive .
      - name: Test with pytest
        run: |
          poetry run pytest tests/
